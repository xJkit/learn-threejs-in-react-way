{"version":3,"sources":["pages/Demo.js","pages/NotFound.js","App.js","pages/ReadMe.js","reportWebVitals.js","index.js"],"names":["MATERIAL_KIND","basic","normal","depth","line","points","lambert","phong","standard","TitleDescription","kind","lights","title","description","maxWidth","spacing","color","alignItems","fontWeight","fontSize","map","idx","Config","backgroundColor","followed","targetRef","scene","useThree","state","camera","background","THREE","followCamera","useCallback","current","lookAt","position","useFrame","Lights","ambientLight","hemisphereLight","directionalLight","directionalHelper","directionalPosition","pointLight","pointHelper","pointPosition","spotLight","spotPosition","spotHelper","spotDistance","penumbra","decay","spotAngle","lightColor","lightIntensity","skyColor","groundColor","directionalLightRef","useRef","pointLightRef","spotLightRef","useHelper","intensity","ref","distance","angle","Donut","donutRef","oscillation","emissiveColor","emissiveIntensity","opacity","isDoubleSide","isRotate","shininess","specular","metalness","roughness","y","Math","sin","rotation","x","includes","rotation-x","PI","args","linewidth","size","castShadow","receiveShadow","transparent","emissive","side","Plane","NotFound","w","h","routes","path","Component","useControls","label","value","isAxesHelper","isGridHelper","Ground","folder","showGround","groundPlaneColor","render","get","Object","materialKind","options","materialColor","min","max","step","spot","ambient","hemisphere","directional","point","useMemo","filter","Boolean","controlRef","flex","onCreated","shineness","OrbitControls","mb","href","target","Sidebar","pt","bgColor","pos","route","to","p","_hover","lineHeight","bottom","left","right","as","FaGithub","mr","Main","props","overflow","py","px","exact","component","App","templateColumns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","pkg","name","document","getElementById"],"mappings":"u7CAOMA,EAAgB,CACpBC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,QAAS,UACTC,MAAO,QACPC,SAAU,YA6VZ,SAASC,EAAT,GAAkD,IAAD,EAArBC,EAAqB,EAArBA,KAAqB,IAAfC,cAAe,MAAN,GAAM,iBAClB,mBAC1BX,EAAcC,MAAQ,CACrB,kBACA,2CAHyB,cAK1BD,EAAcE,OAAS,CACtB,mBACA,0DAPyB,cAS1BF,EAAcG,MAAQ,CACrB,kBACA,sFAXyB,cAa1BH,EAAcI,KAAO,CACpB,iBACA,uCAfyB,cAiB1BJ,EAAcK,OAAS,CACtB,mBACA,8CAnByB,cAqB1BL,EAAcM,QAAU,CACvB,oBACA,uEAvByB,cAyB1BN,EAAcO,MAAQ,CACrB,kBACA,yDA3ByB,cA6B1BP,EAAcQ,SAAW,CACxB,qBACA,wEA/ByB,GAiC3BE,GAlC6C,GACxCE,EADwC,KACjCC,EADiC,KAoC/C,OACE,eAAC,IAAD,CACEC,SAAS,QACTC,QAAS,EACTC,MAAM,WACNC,WAAW,aACXC,WAAW,OALb,UAOE,cAAC,IAAD,CAAMC,SAAS,MAAf,SAAsBP,IACtB,cAAC,IAAD,UAAOC,IACNF,EAAOS,KAAI,WAAuBC,GAAvB,uBAAET,EAAF,KAASC,EAAT,YACV,eAAC,WAAD,WACE,cAAC,IAAD,CAAMM,SAAS,MAAf,SAAsBP,IACtB,cAAC,IAAD,UAAOC,MAFMQ,SASvB,SAASC,EAAT,GAA2D,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACrCC,EAAQC,aAAS,SAACC,GAAD,OAAWA,EAAMF,SAClCG,EAASF,aAAS,SAACC,GAAD,OAAWA,EAAMC,UACzCH,EAAMI,WAAa,IAAIC,QAAYR,GACnC,IAAMS,EAAeC,uBAAY,WAC3BT,GAAYC,EAAUS,SACxBL,EAAOM,OAAOV,EAAUS,QAAQE,YAGjC,CAACZ,EAAUC,EAAWI,IAEzB,OADAQ,YAASL,GACF,KAGT,SAASM,EAAT,GAoBI,IAnBFC,EAmBC,EAnBDA,aACAC,EAkBC,EAlBDA,gBACAC,EAiBC,EAjBDA,iBACAC,EAgBC,EAhBDA,kBACAC,EAeC,EAfDA,oBACAC,EAcC,EAdDA,WACAC,EAaC,EAbDA,YACAC,EAYC,EAZDA,cACAC,EAWC,EAXDA,UACAC,EAUC,EAVDA,aACAC,EASC,EATDA,WACAC,EAQC,EARDA,aACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,MACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,SACAC,EACC,EADDA,YAEMC,EAAsBC,mBACtBC,EAAgBD,mBAChBE,EAAeF,mBAQrB,OAPAG,YACEpB,GAAqBgB,EACrB3B,0BAEF+B,YAAUjB,GAAee,EAAe7B,oBACxC+B,YAAUb,GAAcY,EAAc9B,mBAGpC,qCACGQ,GACC,8BAAcvB,MAAOsC,EAAYS,UAAWR,IAE7Cf,GACC,iCACEuB,UAAWR,EACXC,SAAUA,EACVC,YAAaA,IAGhBhB,GACC,kCACEL,SAAU,CAACO,EAAoB,GAAI,IAAKA,EAAoB,IAC5DqB,IAAKN,EACL1C,MAAOsC,EACPS,UAAWR,IAGdX,GACC,4BACEoB,IAAKJ,EACL5C,MAAOsC,EACPlB,SAAU,CAACU,EAAc,GAAI,GAAKA,EAAc,IAChDiB,UAAWR,EACXU,SAAU,KAGblB,GACC,2BACEiB,IAAKH,EACL7C,MAAOsC,EACPlB,SAAU,CAACY,EAAa,GAAI,EAAGA,EAAa,IAC5Ce,UAAWR,EACXU,SAAUf,EACVgB,MAAOb,EACPF,SAAUA,EACVC,MAAOA,OAOjB,SAASe,EAAT,GAcI,IAAD,EAbDC,EAaC,EAbDA,SACA1D,EAYC,EAZDA,KACA2D,EAWC,EAXDA,YACArD,EAUC,EAVDA,MACAsD,EASC,EATDA,cACAC,EAQC,EARDA,kBACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,aACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,UACAC,EACC,EADDA,UAEIZ,EAAQ,EAYZ,OAXA7B,aAAS,WACH+B,EAASlC,UACPmC,IACFD,EAASlC,QAAQE,SAAS2C,EAAIC,KAAKC,IAAIf,IAErCQ,IACFN,EAASlC,QAAQgD,SAASC,EAAIjB,GAEhCA,GAAS,QAGT,CAAClE,EAAcI,MAAMgF,SAAS1E,GAE9B,uBAAMsD,IAAKI,EAAUiB,cAAc,GAAK,IAAOL,KAAKM,GAApD,UACE,+BAAeC,KAAM,CAAC,GAAK,GAAK,GAAI,MACpC,mCAAmBvE,MAAOA,EAAOwE,UAAW,OAI9C,CAACxF,EAAcK,QAAQ+E,SAAS1E,GAEhC,yBAAQsD,IAAKI,EAAUiB,cAAc,GAAK,IAAOL,KAAKM,GAAtD,UACE,+BAAeC,KAAM,CAAC,GAAK,GAAK,GAAI,MACpC,gCAAgBvE,MAAOA,EAAOyE,KAAM,SAKxC,uBACEzB,IAAKI,EACLiB,cAAc,GAAK,IAAOL,KAAKM,GAC/BI,YAAU,EACVC,eAAa,EAJf,UAME,+BAAeJ,KAAM,CAAC,GAAK,GAAK,GAAI,OACnC,mBACEvF,EAAcC,MACb,mCACEe,MAAOA,EACPwD,QAASA,EACToB,YAAapB,KALlB,cAQExE,EAAcE,OACb,oCAAoBsE,QAASA,EAASoB,YAAyB,IAAZpB,KATtD,cAWExE,EAAcG,MACb,mCACEa,MAAOA,EACPwD,QAASA,EACToB,YAAapB,KAflB,cAkBExE,EAAcM,QACb,qCACEU,MAAOA,EACP6E,SAAUvB,EACVC,kBAAmBA,EACnBuB,KAAMrB,EAAe1C,aAAmBA,YACxCyC,QAASA,EACToB,YAAyB,IAAZpB,KAzBlB,cA4BExE,EAAcO,MACb,mCACES,MAAOA,EACP6E,SAAUvB,EACVC,kBAAmBA,EACnBuB,KAAMrB,EAAe1C,aAAmBA,YACxC4C,UAAWA,EACXC,SAAUA,EACVJ,QAASA,EACToB,YAAyB,IAAZpB,KArClB,cAwCExE,EAAcQ,SACb,sCACEQ,MAAOA,EACP6E,SAAUvB,EACVC,kBAAmBA,EACnBuB,KAAMrB,EAAe1C,aAAmBA,YACxC8C,UAAWA,EACXC,UAAWA,EACXN,QAASA,EACToB,YAAyB,IAAZpB,KAjDlB,GAoDC9D,IAAS,QAKjB,SAASqF,EAAT,GAA2B,IAAV/E,EAAS,EAATA,MACf,OACE,uBAAMqE,cAAa,GAAaL,KAAKM,GAArC,UACE,+BAAeC,KAAM,CAAC,EAAG,KACzB,sCAAsBvE,MAAOA,EAAO6D,UAAW,GAAKC,UAAW,OC5mBtD,SAASkB,IACtB,OACE,cAAC,IAAD,CAAQC,EAAE,OAAOC,EAAE,OAAnB,SACE,cAAC,IAAD,CAASlF,MAAM,WAAf,8BCGN,IAAMmF,EAAS,CACb,CACEC,KAAM,IACNxF,MAAO,OACPyF,UFMW,WAAiB,IAAD,EAuCzBC,YAAY,CACd/E,gBAAiB,CACfgF,MAAO,aACPC,MAAO,WAETC,aAAc,CACZF,MAAO,OACPC,OAAO,GAETE,aAAc,CACZH,MAAO,OACPC,OAAO,GAETnC,YAAa,CACXkC,MAAO,cACPC,OAAO,GAET9B,SAAU,CACR6B,MAAO,WACPC,OAAO,GAEThF,SAAU,CACR+E,MAAO,cACPC,OAAO,GAETG,OAAQC,YAAO,CACbC,WAAY,CACVN,MAAO,UACPC,OAAO,GAETM,iBAAkB,CAChBP,MAAO,QACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAGzBC,OAAQL,YAAO,CACbM,aAAc,CACZX,MAAO,OACPC,MAAOxG,EAAcQ,SACrB2G,QAAS,CACP,iBAAkBnH,EAAcC,MAChC,kBAAmBD,EAAcE,OACjC,iBAAkBF,EAAcG,MAChC,gBAAiBH,EAAcI,KAC/B,kBAAmBJ,EAAcK,OACjC,mBAAoBL,EAAcM,QAClC,iBAAkBN,EAAcO,MAChC,oBAAqBP,EAAcQ,WAGvC4G,cAAe,CACbb,MAAO,QACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcE,SAEhEsE,QAAS,CACP+B,MAAO,UACPC,MAAO,EACPa,IAAK,EACLC,IAAK,EACLC,KAAM,IAERjD,cAAe,CACbiC,MAAO,WACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcM,UAEhEiE,kBAAmB,CACjBgC,MAAO,YACPC,MAAO,EACPa,IAAK,EACLC,IAAK,EACLC,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcM,UAEhEmE,aAAc,CACZ8B,MAAO,cACPC,OAAO,EACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcM,UAEhEqE,UAAW,CACT4B,MAAO,YACPC,MAAO,GACPa,IAAK,EACLC,IAAK,IACLP,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcO,QAEhEqE,SAAU,CACR2B,MAAO,WACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcO,QAEhEsE,UAAW,CACT0B,MAAO,YACPC,MAAO,GACPa,IAAK,EACLC,IAAK,EACLC,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcQ,WAEhEsE,UAAW,CACTyB,MAAO,YACPC,MAAO,GACPa,IAAK,EACLC,IAAK,EACLC,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,yBAA2BhH,EAAcQ,aAGlE8B,OAAQsE,YAAO,CACbtD,WAAY,CACViD,MAAO,QACPC,MAAO,WAETjD,eAAgB,CAAEgD,MAAO,YAAaC,MAAO,EAAGa,IAAK,EAAGC,IAAK,IAC7D,aAAcV,YAAO,CACnBY,KAAM,CACJjB,MAAO,UACPC,OAAO,GAETvD,WAAY,CACVsD,MAAO,SACPC,OAAO,EACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,4BAEvBhE,aAAc,CACZuD,MAAO,WACPC,MAAO,CAAC,EAAG,GACXe,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,4BAEvB9D,aAAc,CACZqD,MAAO,WACPC,MAAO,EACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,4BAEvB3D,UAAW,CACTkD,MAAO,QACPC,MAAQ,EAAI,EAAKxB,KAAKM,GACtBiC,KAAM,GAAMvC,KAAKM,GACjB+B,IAAK,EACLC,IAAK,EAAItC,KAAKM,GACdyB,OAAQ,SAACC,GAAD,OAASA,EAAI,4BAEvB7D,SAAU,CACRoD,MAAO,WACPC,MAAO,GACPe,KAAM,GACNF,IAAK,EACLC,IAAK,EACLP,OAAQ,SAACC,GAAD,OAASA,EAAI,4BAEvB5D,MAAO,CACLmD,MAAO,QACPC,MAAO,GACPe,KAAM,GACNF,IAAK,EACLC,IAAK,EACLP,OAAQ,SAACC,GAAD,OAASA,EAAI,8BAGzB,gBAAiBJ,YAAO,CACtBa,QAAS,CACPlB,MAAO,UACPC,OAAO,KAGX,mBAAoBI,YAAO,CACzBc,WAAY,CACVnB,MAAO,UACPC,OAAO,GAEThD,SAAU,CACR+C,MAAO,YACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,wCAEvBvD,YAAa,CACX8C,MAAO,eACPC,MAAO,UACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,0CAGzB,oBAAqBJ,YAAO,CAC1Be,YAAa,CACXpB,MAAO,UACPC,OAAO,GAET9D,kBAAmB,CACjB6D,MAAO,SACPC,OAAO,EACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,0CAEvBrE,oBAAqB,CACnB4D,MAAO,WACPC,MAAO,CAAC,EAAG,GACXe,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,4CAGzB,aAAcJ,YAAO,CACnBgB,MAAO,CACLrB,MAAO,UACPC,OAAO,GAET3D,YAAa,CACX0D,MAAO,SACPC,OAAO,EACPO,OAAQ,SAACC,GAAD,OAASA,EAAI,6BAEvBlE,cAAe,CACbyD,MAAO,WACPC,MAAO,CAAC,EAAG,GACXe,KAAM,GACNR,OAAQ,SAACC,GAAD,OAASA,EAAI,mCA5P3BzF,EAF2B,EAE3BA,gBACAkF,EAH2B,EAG3BA,aACAC,EAJ2B,EAI3BA,aACArC,EAL2B,EAK3BA,YACA7C,EAN2B,EAM3BA,SACAqF,EAP2B,EAO3BA,WACAC,EAR2B,EAQ3BA,iBACAI,EAT2B,EAS3BA,aACelG,EAVY,EAU3BoG,cACA9C,EAX2B,EAW3BA,cACAC,EAZ2B,EAY3BA,kBACAE,EAb2B,EAa3BA,aACAD,EAd2B,EAc3BA,QACAE,EAf2B,EAe3BA,SACAC,EAhB2B,EAgB3BA,UACAC,EAjB2B,EAiB3BA,SACAC,EAlB2B,EAkB3BA,UACAC,EAnB2B,EAmB3BA,UACAxB,EApB2B,EAoB3BA,WACAC,EArB2B,EAqB3BA,eACShB,EAtBkB,EAsB3BkF,QACYjF,EAvBe,EAuB3BkF,WACAlE,EAxB2B,EAwB3BA,SACAC,EAzB2B,EAyB3BA,YACahB,EA1Bc,EA0B3BkF,YACAjF,EA3B2B,EA2B3BA,kBACAC,EA5B2B,EA4B3BA,oBACOC,EA7BoB,EA6B3BgF,MACA9E,EA9B2B,EA8B3BA,cACAD,EA/B2B,EA+B3BA,YACME,EAhCqB,EAgC3ByE,KACAxE,EAjC2B,EAiC3BA,aACAC,EAlC2B,EAkC3BA,WACAC,EAnC2B,EAmC3BA,aACAG,EApC2B,EAoC3BA,UACAF,EArC2B,EAqC3BA,SACAC,EAtC2B,EAsC3BA,MA6NIzC,EAASkH,mBAAQ,WACrB,MAAO,CACLtF,GAAgB,CACd,gBACA,sFAEFC,GAAmB,CACjB,mBACA,oLAEFC,GAAoB,CAClB,oBACA,sVAEFG,GAAc,CACZ,cACA,wJAEFG,GAAa,CAAC,aAAc,uCAC5B+E,OAAOC,WACR,CAACxF,EAAcC,EAAiBC,EAAkBG,EAAYG,IAC3DtB,EAAYkC,mBACZqE,GAAarE,mBACnB,OACE,eAAC,IAAD,CAAQsC,EAAE,OAAOC,EAAE,OAAOjF,WAAW,aAArC,UACE,cAACR,EAAD,CAAkBC,KAAMwG,EAAcvG,OAAQA,IAC9C,cAAC,IAAD,CAAKsF,EAAE,OAAOgC,KAAM,EAApB,SACE,eAAC,IAAD,CACEpG,OAAQ,CACNO,SAAU,CAAC,EAAG,EAAG,IAEnB8F,UAAW,SAACtG,GACVA,EAAMF,MAAMI,WAAa,IAAIC,QAAYR,IAL7C,UAQE,cAACD,EAAD,CACEC,gBAAiBA,EACjBC,SAAUA,EACVC,UAAWA,EACXuG,WAAYA,KAEd,cAAC7D,EAAD,CACEC,SAAU3C,EACV4C,YAAaA,EACb3D,KAAMwG,EACNlG,MAAOA,EACPsD,cAAeA,EACfC,kBAAmBA,EACnBC,QAASA,EACTC,aAAcA,EACdC,SAAUA,EACVyD,UAAWxD,EACXC,SAAUA,EACVC,UAAWA,EACXC,UAAWA,IAEZ+B,GAAc,cAACd,EAAD,CAAO/E,MAAO8F,IAC7B,cAACxE,EAAD,CACEC,aAAcA,EACdC,gBAAiBA,EACjBC,iBAAkBA,EAClBG,WAAYA,EACZE,cAAeA,EACfD,YAAaA,EACbE,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,aAAcA,EACdG,UAAWA,EACXF,SAAUA,EACVC,MAAOA,EACPV,kBAAmBA,EACnBC,oBAAqBA,EACrBW,WAAYA,EACZC,eAAgBA,EAChBC,SAAUA,EACVC,YAAaA,IAEdgD,GAAgB,+BAChBC,GAAgB,gCACflF,GAAY,cAAC4G,EAAA,EAAD,CAAepE,IAAKgE,eEvV1C,CACE5B,KAAM,WACNxF,MAAO,UACPyF,UCfW,WACb,OACE,eAAC,IAAD,CAAKrF,MAAM,WAAWiF,EAAE,OAAO9E,SAAS,KAAxC,UACE,eAAC,IAAD,CAASkH,GAAI,GAAb,8BACoB,IAClB,cAAC,IAAD,CAAMrH,MAAM,WAAWsH,KAAK,uBAAuBC,OAAO,SAA1D,mBAEQ,IAJV,SAOA,eAAC,IAAD,CAAQxH,QAAS,EAAGE,WAAW,aAA/B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMqH,KAAK,uBAAuBC,OAAO,SAASvH,MAAM,WAAxD,sBAEQ,IAHV,2EAMA,eAAC,IAAD,uDAC4C,IAC1C,cAAC,IAAD,CACEA,MAAM,WACNsH,KAAK,qFACLC,OAAO,SAHT,iDAFF,qJAWgB,IACd,2FAZF,qCAeA,eAAC,IAAD,2DACgD,IAC9C,cAAC,IAAD,CACED,KAAK,8CACLtH,MAAM,WACNuH,OAAO,SAHT,+BAMQ,IARV,+CAWA,eAAC,IAAD,uCAC4B,IAC1B,cAAC,IAAD,CACEvH,MAAM,WACNsH,KAAK,sDACLC,OAAO,SAHT,0BAMQ,IARV,gDDxBR,SAASC,IACP,OACE,eAAC,IAAD,CACEtC,EAAE,OACFD,EAAE,OACFwC,GAAI,EACJC,QAAQ,WACR1H,MAAM,QACNE,WAAW,OACXD,WAAW,UACX0H,IAAI,WARN,UAUGxC,EAAO/E,KAAI,SAACwH,GAAD,OACV,cAAC,IAAD,CAAYC,GAAID,EAAMxC,KAAtB,SACE,cAAC,IAAD,CACEpF,MAAM,WACNiF,EAAE,OACF6C,EAAG,EACHC,OAAQ,CAAEL,QAAS,YAJrB,SAMGE,EAAMhI,SAPsBgI,EAAMhI,UAWzC,cAAC,IAAD,CACE8H,QAAQ,WACRC,IAAI,WACJK,WAAW,OACXC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnI,MAAM,WAPR,SASE,eAAC,IAAD,CAAMsH,KAAK,2BAA2BC,OAAO,SAA7C,UACE,cAAC,IAAD,CAAMa,GAAIC,IAAUC,GAAI,IAD1B,oBASR,SAASC,EAAKC,GACZ,OACE,cAAC,IAAD,yBAAQtD,EAAE,OAAOD,EAAE,OAAOwD,SAAS,UAAaD,GAAhD,IAAuDE,GAAI,EAAGC,GAAI,EAAlE,SACE,eAAC,IAAD,WACGxD,EAAO/E,KAAI,SAACwH,GAAD,OACV,cAAC,IAAD,CACEgB,OAAK,EAELxD,KAAMwC,EAAMxC,KACZyD,UAAWjB,EAAMvC,WAFZuC,EAAMxC,SAKf,cAAC,IAAD,CAAOyD,UAAW7D,UAeX8D,MATf,WACE,OACE,eAAC,IAAD,CAAM5D,EAAE,QAAQD,EAAE,QAAQ8D,gBAAgB,YAA1C,UACE,cAACvB,EAAD,IACA,cAACe,EAAD,QEzESS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCEdQ,IAAS1D,OACP,cAAC,IAAM2D,WAAP,UACE,cAAC,IAAD,CAAeC,SAAQ,WAAMC,EAAIC,MAAjC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.d99dec7a.chunk.js","sourcesContent":["import { useRef, useMemo, Fragment, useCallback } from 'react';\nimport { Box, Text, VStack } from '@chakra-ui/react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls, useHelper } from '@react-three/drei';\nimport { useControls, folder } from 'leva';\nimport * as THREE from 'three';\n\nconst MATERIAL_KIND = {\n  basic: 'basic',\n  normal: 'normal',\n  depth: 'depth',\n  line: 'line',\n  points: 'points',\n  lambert: 'lambert',\n  phong: 'phong',\n  standard: 'standard',\n};\n\nexport default function Demo() {\n  const {\n    backgroundColor,\n    isAxesHelper,\n    isGridHelper,\n    oscillation,\n    followed,\n    showGround,\n    groundPlaneColor,\n    materialKind,\n    materialColor: color,\n    emissiveColor,\n    emissiveIntensity,\n    isDoubleSide,\n    opacity,\n    isRotate,\n    shininess,\n    specular,\n    metalness,\n    roughness,\n    lightColor,\n    lightIntensity,\n    ambient: ambientLight,\n    hemisphere: hemisphereLight,\n    skyColor,\n    groundColor,\n    directional: directionalLight,\n    directionalHelper,\n    directionalPosition,\n    point: pointLight,\n    pointPosition,\n    pointHelper,\n    spot: spotLight,\n    spotPosition,\n    spotHelper,\n    spotDistance,\n    spotAngle,\n    penumbra,\n    decay,\n  } = useControls({\n    backgroundColor: {\n      label: 'Background',\n      value: '#111111',\n    },\n    isAxesHelper: {\n      label: 'Axes',\n      value: true,\n    },\n    isGridHelper: {\n      label: 'Grid',\n      value: true,\n    },\n    oscillation: {\n      label: 'Oscillation',\n      value: true,\n    },\n    isRotate: {\n      label: 'Rotation',\n      value: true,\n    },\n    followed: {\n      label: 'Camera Lock',\n      value: false,\n    },\n    Ground: folder({\n      showGround: {\n        label: 'Display',\n        value: true,\n      },\n      groundPlaneColor: {\n        label: 'Color',\n        value: '#218550',\n        render: (get) => get('Ground.showGround'),\n      },\n    }),\n    Object: folder({\n      materialKind: {\n        label: 'Kind',\n        value: MATERIAL_KIND.standard,\n        options: {\n          'Basic Material': MATERIAL_KIND.basic,\n          'Normal Material': MATERIAL_KIND.normal,\n          'Depth Material': MATERIAL_KIND.depth,\n          'Line Material': MATERIAL_KIND.line,\n          'Points Material': MATERIAL_KIND.points,\n          'Lambert Material': MATERIAL_KIND.lambert,\n          'Phong Material': MATERIAL_KIND.phong,\n          'Standard Material': MATERIAL_KIND.standard,\n        },\n      },\n      materialColor: {\n        label: 'Color',\n        value: '#aaa123',\n        render: (get) => get('Object.materialKind') !== MATERIAL_KIND.normal,\n      },\n      opacity: {\n        label: 'Opacity',\n        value: 1,\n        min: 0,\n        max: 1,\n        step: 0.1,\n      },\n      emissiveColor: {\n        label: 'Emissive',\n        value: '#ffffff',\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      emissiveIntensity: {\n        label: 'Intensity',\n        value: 0,\n        min: 0,\n        max: 5,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      isDoubleSide: {\n        label: 'DoubleSided',\n        value: false,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      shininess: {\n        label: 'Shininess',\n        value: 30,\n        min: 0,\n        max: 100,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.phong,\n      },\n      specular: {\n        label: 'Specular',\n        value: '#111111',\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.phong,\n      },\n      metalness: {\n        label: 'Metalness',\n        value: 0.5,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.standard,\n      },\n      roughness: {\n        label: 'Roughness',\n        value: 0.5,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.standard,\n      },\n    }),\n    Lights: folder({\n      lightColor: {\n        label: 'Color',\n        value: '#ee6b6b',\n      },\n      lightIntensity: { label: 'Intensity', value: 8, min: 0, max: 10 },\n      'Spot Light': folder({\n        spot: {\n          label: 'Turn On',\n          value: true,\n        },\n        spotHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotDistance: {\n          label: 'Distance',\n          value: 3,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotAngle: {\n          label: 'Angle',\n          value: (1 / 6) * Math.PI,\n          step: 0.1 * Math.PI,\n          min: 0,\n          max: 2 * Math.PI,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        penumbra: {\n          label: 'Penumbra',\n          value: 0.1,\n          step: 0.1,\n          min: 0,\n          max: 1,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        decay: {\n          label: 'Decay',\n          value: 0.1,\n          step: 0.1,\n          min: 0,\n          max: 1,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n      }),\n      'Ambient Light': folder({\n        ambient: {\n          label: 'Turn On',\n          value: false,\n        },\n      }),\n      'Hemisphere Light': folder({\n        hemisphere: {\n          label: 'Turn On',\n          value: false,\n        },\n        skyColor: {\n          label: 'Sky Color',\n          value: '#333888',\n          render: (get) => get(`Lights.Hemisphere Light.hemisphere`),\n        },\n        groundColor: {\n          label: 'Ground Color',\n          value: '#aaaaaa',\n          render: (get) => get('Lights.Hemisphere Light.hemisphere'),\n        },\n      }),\n      'Directional Light': folder({\n        directional: {\n          label: 'Turn On',\n          value: false,\n        },\n        directionalHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Directional Light.directional'),\n        },\n        directionalPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Directional Light.directional'),\n        },\n      }),\n      'Point Line': folder({\n        point: {\n          label: 'Turn On',\n          value: false,\n        },\n        pointHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Point Line.point'),\n        },\n        pointPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Point Line.point'),\n        },\n      }),\n    }),\n  });\n  const lights = useMemo(() => {\n    return [\n      ambientLight && [\n        'Ambient Light',\n        'illuminate everywhere in the same level (does not come from a specific direction).',\n      ],\n      hemisphereLight && [\n        'Hemisphere Light',\n        'A light source positioned directly above the scene just like the sky light, with color fading from the sky color to the ground color. This light cannot be used to cast shadows.',\n      ],\n      directionalLight && [\n        'Directional Light',\n        'A light that gets emitted in a specific direction. This light will behave as though it is infinitely far away and the rays produced from it are all parallel. The common use case for this is to simulate daylight; the sun is far enough away that its position can be considered to be infinite, and all light rays coming from it are parallel.',\n      ],\n      pointLight && [\n        'Point Light',\n        'A light that gets emitted from a single point in all directions. A common use case for this is to replicate the light emitted from a bare lightbulb.',\n      ],\n      spotLight && ['Spot Light', 'A light comes from a single point.'],\n    ].filter(Boolean);\n  }, [ambientLight, hemisphereLight, directionalLight, pointLight, spotLight]);\n  const targetRef = useRef();\n  const controlRef = useRef();\n  return (\n    <VStack w=\"100%\" h=\"100%\" alignItems=\"flex-start\">\n      <TitleDescription kind={materialKind} lights={lights} />\n      <Box w=\"100%\" flex={1}>\n        <Canvas\n          camera={{\n            position: [2, 2, 2],\n          }}\n          onCreated={(state) => {\n            state.scene.background = new THREE.Color(backgroundColor);\n          }}\n        >\n          <Config\n            backgroundColor={backgroundColor}\n            followed={followed}\n            targetRef={targetRef}\n            controlRef={controlRef}\n          />\n          <Donut\n            donutRef={targetRef}\n            oscillation={oscillation}\n            kind={materialKind}\n            color={color}\n            emissiveColor={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            opacity={opacity}\n            isDoubleSide={isDoubleSide}\n            isRotate={isRotate}\n            shineness={shininess}\n            specular={specular}\n            metalness={metalness}\n            roughness={roughness}\n          />\n          {showGround && <Plane color={groundPlaneColor} />}\n          <Lights\n            ambientLight={ambientLight}\n            hemisphereLight={hemisphereLight}\n            directionalLight={directionalLight}\n            pointLight={pointLight}\n            pointPosition={pointPosition}\n            pointHelper={pointHelper}\n            spotLight={spotLight}\n            spotPosition={spotPosition}\n            spotHelper={spotHelper}\n            spotDistance={spotDistance}\n            spotAngle={spotAngle}\n            penumbra={penumbra}\n            decay={decay}\n            directionalHelper={directionalHelper}\n            directionalPosition={directionalPosition}\n            lightColor={lightColor}\n            lightIntensity={lightIntensity}\n            skyColor={skyColor}\n            groundColor={groundColor}\n          />\n          {isAxesHelper && <axesHelper />}\n          {isGridHelper && <gridHelper />}\n          {!followed && <OrbitControls ref={controlRef} />}\n        </Canvas>\n      </Box>\n    </VStack>\n  );\n}\n\nfunction TitleDescription({ kind, lights = [] }) {\n  const [title, description] = {\n    [MATERIAL_KIND.basic]: [\n      'Basic Materials',\n      'Uniform color on the geometry surfaces',\n    ],\n    [MATERIAL_KIND.normal]: [\n      'Normal Materials',\n      'A material that maps the normal vectors to RGB colors',\n    ],\n    [MATERIAL_KIND.depth]: [\n      'Depth Materials',\n      'color based on the distance from camera: closer gets darker, further gets lighter',\n    ],\n    [MATERIAL_KIND.line]: [\n      'Line Materials',\n      'Only show the outline of the shape',\n    ],\n    [MATERIAL_KIND.points]: [\n      'Points Materials',\n      'Only show the points outline of the shape',\n    ],\n    [MATERIAL_KIND.lambert]: [\n      'Lambert Materials',\n      'Light sensitive material which simulates the Lambertian Reflection',\n    ],\n    [MATERIAL_KIND.phong]: [\n      'Phong Materials',\n      'A material for shinny surfaces with specular effects',\n    ],\n    [MATERIAL_KIND.standard]: [\n      'Standard Materials',\n      'A material uses a metalic-roughness model to simulate real material',\n    ],\n  }[kind];\n\n  return (\n    <VStack\n      maxWidth=\"600px\"\n      spacing={3}\n      color=\"blue.800\"\n      alignItems=\"flex-start\"\n      fontWeight=\"bold\"\n    >\n      <Text fontSize=\"2xl\">{title}</Text>\n      <Text>{description}</Text>\n      {lights.map(([title, description], idx) => (\n        <Fragment key={idx}>\n          <Text fontSize=\"2xl\">{title}</Text>\n          <Text>{description}</Text>\n        </Fragment>\n      ))}\n    </VStack>\n  );\n}\n\nfunction Config({ backgroundColor, followed, targetRef }) {\n  const scene = useThree((state) => state.scene);\n  const camera = useThree((state) => state.camera);\n  scene.background = new THREE.Color(backgroundColor);\n  const followCamera = useCallback(() => {\n    if (followed && targetRef.current) {\n      camera.lookAt(targetRef.current.position);\n      // controlRef.current.update();\n    }\n  }, [followed, targetRef, camera]);\n  useFrame(followCamera);\n  return null;\n}\n\nfunction Lights({\n  ambientLight,\n  hemisphereLight,\n  directionalLight,\n  directionalHelper,\n  directionalPosition,\n  pointLight,\n  pointHelper,\n  pointPosition,\n  spotLight,\n  spotPosition,\n  spotHelper,\n  spotDistance,\n  penumbra,\n  decay,\n  spotAngle,\n  lightColor,\n  lightIntensity,\n  skyColor,\n  groundColor,\n}) {\n  const directionalLightRef = useRef();\n  const pointLightRef = useRef();\n  const spotLightRef = useRef();\n  useHelper(\n    directionalHelper && directionalLightRef,\n    THREE.DirectionalLightHelper\n  );\n  useHelper(pointHelper && pointLightRef, THREE.PointLightHelper);\n  useHelper(spotHelper && spotLightRef, THREE.SpotLightHelper);\n\n  return (\n    <>\n      {ambientLight && (\n        <ambientLight color={lightColor} intensity={lightIntensity} />\n      )}\n      {hemisphereLight && (\n        <hemisphereLight\n          intensity={lightIntensity}\n          skyColor={skyColor}\n          groundColor={groundColor}\n        />\n      )}\n      {directionalLight && (\n        <directionalLight\n          position={[directionalPosition[0], 1.5, directionalPosition[1]]}\n          ref={directionalLightRef}\n          color={lightColor}\n          intensity={lightIntensity}\n        />\n      )}\n      {pointLight && (\n        <pointLight\n          ref={pointLightRef}\n          color={lightColor}\n          position={[pointPosition[0], 0.5, pointPosition[1]]}\n          intensity={lightIntensity}\n          distance={10}\n        />\n      )}\n      {spotLight && (\n        <spotLight\n          ref={spotLightRef}\n          color={lightColor}\n          position={[spotPosition[0], 2, spotPosition[1]]}\n          intensity={lightIntensity}\n          distance={spotDistance}\n          angle={spotAngle}\n          penumbra={penumbra}\n          decay={decay}\n        />\n      )}\n    </>\n  );\n}\n\nfunction Donut({\n  donutRef,\n  kind,\n  oscillation,\n  color,\n  emissiveColor,\n  emissiveIntensity,\n  opacity,\n  isDoubleSide,\n  isRotate,\n  shininess,\n  specular,\n  metalness,\n  roughness,\n}) {\n  let angle = 0;\n  useFrame(() => {\n    if (donutRef.current) {\n      if (oscillation) {\n        donutRef.current.position.y = Math.sin(angle);\n      }\n      if (isRotate) {\n        donutRef.current.rotation.x = angle;\n      }\n      angle += 0.01;\n    }\n  });\n  if ([MATERIAL_KIND.line].includes(kind)) {\n    return (\n      <line ref={donutRef} rotation-x={(-30 / 180) * Math.PI}>\n        <torusGeometry args={[0.5, 0.2, 30, 30]} />\n        <lineBasicMaterial color={color} linewidth={1} />\n      </line>\n    );\n  }\n  if ([MATERIAL_KIND.points].includes(kind)) {\n    return (\n      <points ref={donutRef} rotation-x={(-30 / 180) * Math.PI}>\n        <torusGeometry args={[0.5, 0.2, 30, 30]} />\n        <pointsMaterial color={color} size={0.01} />\n      </points>\n    );\n  }\n  return (\n    <mesh\n      ref={donutRef}\n      rotation-x={(-30 / 180) * Math.PI}\n      castShadow\n      receiveShadow\n    >\n      <torusGeometry args={[0.5, 0.2, 30, 30]} />\n      {{\n        [MATERIAL_KIND.basic]: (\n          <meshBasicMaterial\n            color={color}\n            opacity={opacity}\n            transparent={opacity}\n          />\n        ),\n        [MATERIAL_KIND.normal]: (\n          <meshNormalMaterial opacity={opacity} transparent={opacity !== 1} />\n        ),\n        [MATERIAL_KIND.depth]: (\n          <meshDepthMaterial\n            color={color}\n            opacity={opacity}\n            transparent={opacity}\n          />\n        ),\n        [MATERIAL_KIND.lambert]: (\n          <meshLambertMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n        [MATERIAL_KIND.phong]: (\n          <meshPhongMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            shininess={shininess} // default 30\n            specular={specular}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n        [MATERIAL_KIND.standard]: (\n          <meshStandardMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            metalness={metalness}\n            roughness={roughness}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n      }[kind] || null}\n    </mesh>\n  );\n}\n\nfunction Plane({ color }) {\n  return (\n    <mesh rotation-x={(-90 / 180) * Math.PI}>\n      <planeGeometry args={[2, 2]} />\n      <meshStandardMaterial color={color} metalness={0.6} roughness={0} />\n    </mesh>\n  );\n}\n","import { Heading, Center } from '@chakra-ui/react';\n\nexport default function NotFound() {\n  return (\n    <Center w=\"100%\" h=\"100%\">\n      <Heading color=\"gray.300\">Not Found Page</Heading>\n    </Center>\n  );\n}\n","import { Grid, VStack, Center, Icon, Link } from '@chakra-ui/react';\nimport { Switch, Route, Link as RouterLink } from 'react-router-dom';\nimport { FaGithub } from 'react-icons/fa';\n\nimport ReadMe from './pages/ReadMe';\nimport Demo from './pages/Demo';\nimport NotFound from './pages/NotFound';\n\nconst routes = [\n  {\n    path: '/',\n    title: 'Demo',\n    Component: Demo,\n  },\n  {\n    path: '/read-me',\n    title: 'Read Me',\n    Component: ReadMe,\n  },\n];\n\nfunction Sidebar() {\n  return (\n    <VStack\n      h=\"100%\"\n      w=\"100%\"\n      pt={4}\n      bgColor=\"blue.800\"\n      color=\"white\"\n      fontWeight=\"bold\"\n      alignItems=\"stretch\"\n      pos=\"relative\"\n    >\n      {routes.map((route) => (\n        <RouterLink to={route.path} key={route.title}>\n          <Center\n            color=\"blue.100\"\n            w=\"100%\"\n            p={3}\n            _hover={{ bgColor: 'blue.700' }}\n          >\n            {route.title}\n          </Center>\n        </RouterLink>\n      ))}\n      <Center\n        bgColor=\"blue.100\"\n        pos=\"absolute\"\n        lineHeight=\"60px\"\n        bottom={0}\n        left={0}\n        right={0}\n        color=\"blue.800\"\n      >\n        <Link href=\"https://github.com/xJkit\" target=\"_blank\">\n          <Icon as={FaGithub} mr={2} />\n          Jay Chung\n        </Link>\n      </Center>\n    </VStack>\n  );\n}\n\nfunction Main(props) {\n  return (\n    <VStack h=\"100%\" w=\"100%\" overflow=\"hidden\" {...props} py={8} px={5}>\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            exact\n            key={route.path}\n            path={route.path}\n            component={route.Component}\n          />\n        ))}\n        <Route component={NotFound} />\n      </Switch>\n    </VStack>\n  );\n}\n\nfunction App() {\n  return (\n    <Grid h=\"100vh\" w=\"100vw\" templateColumns=\"140px 1fr\">\n      <Sidebar />\n      <Main />\n    </Grid>\n  );\n}\n\nexport default App;\n","import { Heading, Box, Text, Link, VStack } from '@chakra-ui/react';\n\nexport default function ReadMe() {\n  return (\n    <Box color=\"blue.800\" w=\"100%\" fontSize=\"xl\">\n      <Heading mb={10}>\n        Learn Three.js in{' '}\n        <Link color=\"blue.500\" href=\"https://reactjs.org/\" target=\"_blank\">\n          React\n        </Link>{' '}\n        way\n      </Heading>\n      <VStack spacing={5} alignItems=\"flex-start\">\n        <Text>\n          <Link href=\"https://threejs.org/\" target=\"_blank\" color=\"blue.500\">\n            Three.js\n          </Link>{' '}\n          is an awesome library that makes the Web 3D development a lot easier.\n        </Text>\n        <Text>\n          However, when I begin three.js, from this{' '}\n          <Link\n            color=\"blue.500\"\n            href=\"https://github.com/mrdoob/three.js/blob/master/examples/webgl_animation_cloth.html\"\n            target=\"_blank\"\n          >\n            official documentation code example\n          </Link>\n          , creating meshes, objects, materials, lights, render loops, and so on\n          in imperative way is not really my thing. Why not just create\n          everything in{' '}\n          <b>declarative, more functional, and component-based objects!</b> That\n          is what React looks like.\n        </Text>\n        <Text>\n          Special thanks to the three.js react renderer{' '}\n          <Link\n            href=\"https://github.com/pmndrs/react-three-fiber\"\n            color=\"blue.500\"\n            target=\"_blank\"\n          >\n            react-three/fiber\n          </Link>{' '}\n          which makes web 3d happen in React world.\n        </Text>\n        <Text>\n          It is welcome to check my{' '}\n          <Link\n            color=\"blue.500\"\n            href=\"https://github.com/xJkit/learn-threejs-in-react-way\"\n            target=\"_blank\"\n          >\n            source code.\n          </Link>{' '}\n          Any suggestion and PR is welcome!\n        </Text>\n      </VStack>\n    </Box>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport pkg from '../package.json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={`/${pkg.name}`}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}