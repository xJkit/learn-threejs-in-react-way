{"version":3,"sources":["pages/Demo.js","pages/Interaction.js","pages/NotFound.js","App.js","pages/ReadMe.js","reportWebVitals.js","index.js"],"names":["MATERIAL_KIND","basic","normal","depth","line","points","lambert","phong","standard","TitleDescription","kind","lights","title","description","maxWidth","spacing","color","alignItems","fontWeight","fontSize","map","idx","Config","backgroundColor","followed","targetRef","scene","useThree","state","camera","background","THREE","followCamera","useCallback","current","lookAt","position","useFrame","Lights","ambientLight","hemisphereLight","directionalLight","directionalHelper","directionalPosition","pointLight","pointHelper","pointPosition","spotLight","spotPosition","spotHelper","spotDistance","penumbra","decay","spotAngle","lightColor","lightIntensity","skyColor","groundColor","directionalLightRef","useRef","pointLightRef","spotLightRef","useHelper","intensity","ref","distance","angle","Donut","donutRef","oscillation","emissiveColor","emissiveIntensity","opacity","isDoubleSide","isRotate","shininess","specular","metalness","roughness","y","Math","sin","rotation","x","includes","rotation-x","PI","args","linewidth","size","castShadow","receiveShadow","transparent","emissive","side","Plane","Ball","ballRef","posX","posZ","delta","parseFloat","toFixed","z","handleInteraction","evt","key","useEffect","document","addEventListener","removeEventListener","Light","props","directionLightRef","NotFound","w","h","routes","path","Component","useControls","label","value","isAxesHelper","isGridHelper","Ground","folder","showGround","groundPlaneColor","render","get","Object","materialKind","options","materialColor","min","max","step","spot","ambient","hemisphere","directional","point","useMemo","filter","Boolean","controlRef","flex","onCreated","shineness","OrbitControls","mb","href","target","Sidebar","pt","bgColor","pos","route","to","p","_hover","lineHeight","bottom","left","right","as","FaGithub","mr","Main","overflow","py","px","exact","component","App","templateColumns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","pkg","name","getElementById"],"mappings":"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","file":"static/js/main.2805f5df.chunk.js","sourcesContent":["import { useRef, useMemo, Fragment, useCallback } from 'react';\nimport { Box, Text, VStack } from '@chakra-ui/react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls, useHelper } from '@react-three/drei';\nimport { useControls, folder } from 'leva';\nimport * as THREE from 'three';\n\nconst MATERIAL_KIND = {\n  basic: 'basic',\n  normal: 'normal',\n  depth: 'depth',\n  line: 'line',\n  points: 'points',\n  lambert: 'lambert',\n  phong: 'phong',\n  standard: 'standard',\n};\n\nexport default function Demo() {\n  const {\n    backgroundColor,\n    isAxesHelper,\n    isGridHelper,\n    oscillation,\n    followed,\n    showGround,\n    groundPlaneColor,\n    materialKind,\n    materialColor: color,\n    emissiveColor,\n    emissiveIntensity,\n    isDoubleSide,\n    opacity,\n    isRotate,\n    shininess,\n    specular,\n    metalness,\n    roughness,\n    lightColor,\n    lightIntensity,\n    ambient: ambientLight,\n    hemisphere: hemisphereLight,\n    skyColor,\n    groundColor,\n    directional: directionalLight,\n    directionalHelper,\n    directionalPosition,\n    point: pointLight,\n    pointPosition,\n    pointHelper,\n    spot: spotLight,\n    spotPosition,\n    spotHelper,\n    spotDistance,\n    spotAngle,\n    penumbra,\n    decay,\n  } = useControls({\n    backgroundColor: {\n      label: 'Background',\n      value: '#111111',\n    },\n    isAxesHelper: {\n      label: 'Axes',\n      value: true,\n    },\n    isGridHelper: {\n      label: 'Grid',\n      value: true,\n    },\n    oscillation: {\n      label: 'Oscillation',\n      value: true,\n    },\n    isRotate: {\n      label: 'Rotation',\n      value: true,\n    },\n    followed: {\n      label: 'Camera Lock',\n      value: false,\n    },\n    Ground: folder({\n      showGround: {\n        label: 'Display',\n        value: true,\n      },\n      groundPlaneColor: {\n        label: 'Color',\n        value: '#218550',\n        render: (get) => get('Ground.showGround'),\n      },\n    }),\n    Object: folder({\n      materialKind: {\n        label: 'Kind',\n        value: MATERIAL_KIND.standard,\n        options: {\n          'Basic Material': MATERIAL_KIND.basic,\n          'Normal Material': MATERIAL_KIND.normal,\n          'Depth Material': MATERIAL_KIND.depth,\n          'Line Material': MATERIAL_KIND.line,\n          'Points Material': MATERIAL_KIND.points,\n          'Lambert Material': MATERIAL_KIND.lambert,\n          'Phong Material': MATERIAL_KIND.phong,\n          'Standard Material': MATERIAL_KIND.standard,\n        },\n      },\n      materialColor: {\n        label: 'Color',\n        value: '#aaa123',\n        render: (get) => get('Object.materialKind') !== MATERIAL_KIND.normal,\n      },\n      opacity: {\n        label: 'Opacity',\n        value: 1,\n        min: 0,\n        max: 1,\n        step: 0.1,\n      },\n      emissiveColor: {\n        label: 'Emissive',\n        value: '#ffffff',\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      emissiveIntensity: {\n        label: 'Intensity',\n        value: 0,\n        min: 0,\n        max: 5,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      isDoubleSide: {\n        label: 'DoubleSided',\n        value: false,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.lambert,\n      },\n      shininess: {\n        label: 'Shininess',\n        value: 30,\n        min: 0,\n        max: 100,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.phong,\n      },\n      specular: {\n        label: 'Specular',\n        value: '#111111',\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.phong,\n      },\n      metalness: {\n        label: 'Metalness',\n        value: 0.5,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.standard,\n      },\n      roughness: {\n        label: 'Roughness',\n        value: 0.5,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        render: (get) => get('Object.materialKind') === MATERIAL_KIND.standard,\n      },\n    }),\n    Lights: folder({\n      lightColor: {\n        label: 'Color',\n        value: '#ee6b6b',\n      },\n      lightIntensity: { label: 'Intensity', value: 8, min: 0, max: 10 },\n      'Spot Light': folder({\n        spot: {\n          label: 'Turn On',\n          value: true,\n        },\n        spotHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotDistance: {\n          label: 'Distance',\n          value: 3,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        spotAngle: {\n          label: 'Angle',\n          value: (1 / 6) * Math.PI,\n          step: 0.1 * Math.PI,\n          min: 0,\n          max: 2 * Math.PI,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        penumbra: {\n          label: 'Penumbra',\n          value: 0.1,\n          step: 0.1,\n          min: 0,\n          max: 1,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n        decay: {\n          label: 'Decay',\n          value: 0.1,\n          step: 0.1,\n          min: 0,\n          max: 1,\n          render: (get) => get('Lights.Spot Light.spot'),\n        },\n      }),\n      'Ambient Light': folder({\n        ambient: {\n          label: 'Turn On',\n          value: false,\n        },\n      }),\n      'Hemisphere Light': folder({\n        hemisphere: {\n          label: 'Turn On',\n          value: false,\n        },\n        skyColor: {\n          label: 'Sky Color',\n          value: '#333888',\n          render: (get) => get(`Lights.Hemisphere Light.hemisphere`),\n        },\n        groundColor: {\n          label: 'Ground Color',\n          value: '#aaaaaa',\n          render: (get) => get('Lights.Hemisphere Light.hemisphere'),\n        },\n      }),\n      'Directional Light': folder({\n        directional: {\n          label: 'Turn On',\n          value: false,\n        },\n        directionalHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Directional Light.directional'),\n        },\n        directionalPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Directional Light.directional'),\n        },\n      }),\n      'Point Line': folder({\n        point: {\n          label: 'Turn On',\n          value: false,\n        },\n        pointHelper: {\n          label: 'Helper',\n          value: true,\n          render: (get) => get('Lights.Point Line.point'),\n        },\n        pointPosition: {\n          label: 'Position',\n          value: [0, 0], // (x, z)\n          step: 0.5,\n          render: (get) => get('Lights.Point Line.point'),\n        },\n      }),\n    }),\n  });\n  const lights = useMemo(() => {\n    return [\n      ambientLight && [\n        'Ambient Light',\n        'illuminate everywhere in the same level (does not come from a specific direction).',\n      ],\n      hemisphereLight && [\n        'Hemisphere Light',\n        'A light source positioned directly above the scene just like the sky light, with color fading from the sky color to the ground color. This light cannot be used to cast shadows.',\n      ],\n      directionalLight && [\n        'Directional Light',\n        'A light that gets emitted in a specific direction. This light will behave as though it is infinitely far away and the rays produced from it are all parallel. The common use case for this is to simulate daylight; the sun is far enough away that its position can be considered to be infinite, and all light rays coming from it are parallel.',\n      ],\n      pointLight && [\n        'Point Light',\n        'A light that gets emitted from a single point in all directions. A common use case for this is to replicate the light emitted from a bare lightbulb.',\n      ],\n      spotLight && ['Spot Light', 'A light comes from a single point.'],\n    ].filter(Boolean);\n  }, [ambientLight, hemisphereLight, directionalLight, pointLight, spotLight]);\n  const targetRef = useRef();\n  const controlRef = useRef();\n  return (\n    <VStack w=\"100%\" h=\"100%\" alignItems=\"flex-start\">\n      <TitleDescription kind={materialKind} lights={lights} />\n      <Box w=\"100%\" flex={1}>\n        <Canvas\n          camera={{\n            position: [2, 2, 2],\n          }}\n          onCreated={(state) => {\n            state.scene.background = new THREE.Color(backgroundColor);\n          }}\n        >\n          <Config\n            backgroundColor={backgroundColor}\n            followed={followed}\n            targetRef={targetRef}\n            controlRef={controlRef}\n          />\n          <Donut\n            donutRef={targetRef}\n            oscillation={oscillation}\n            kind={materialKind}\n            color={color}\n            emissiveColor={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            opacity={opacity}\n            isDoubleSide={isDoubleSide}\n            isRotate={isRotate}\n            shineness={shininess}\n            specular={specular}\n            metalness={metalness}\n            roughness={roughness}\n          />\n          {showGround && <Plane color={groundPlaneColor} />}\n          <Lights\n            ambientLight={ambientLight}\n            hemisphereLight={hemisphereLight}\n            directionalLight={directionalLight}\n            pointLight={pointLight}\n            pointPosition={pointPosition}\n            pointHelper={pointHelper}\n            spotLight={spotLight}\n            spotPosition={spotPosition}\n            spotHelper={spotHelper}\n            spotDistance={spotDistance}\n            spotAngle={spotAngle}\n            penumbra={penumbra}\n            decay={decay}\n            directionalHelper={directionalHelper}\n            directionalPosition={directionalPosition}\n            lightColor={lightColor}\n            lightIntensity={lightIntensity}\n            skyColor={skyColor}\n            groundColor={groundColor}\n          />\n          {isAxesHelper && <axesHelper />}\n          {isGridHelper && <gridHelper />}\n          {!followed && <OrbitControls ref={controlRef} />}\n        </Canvas>\n      </Box>\n    </VStack>\n  );\n}\n\nfunction TitleDescription({ kind, lights = [] }) {\n  const [title, description] = {\n    [MATERIAL_KIND.basic]: [\n      'Basic Materials',\n      'Uniform color on the geometry surfaces',\n    ],\n    [MATERIAL_KIND.normal]: [\n      'Normal Materials',\n      'A material that maps the normal vectors to RGB colors',\n    ],\n    [MATERIAL_KIND.depth]: [\n      'Depth Materials',\n      'color based on the distance from camera: closer gets darker, further gets lighter',\n    ],\n    [MATERIAL_KIND.line]: [\n      'Line Materials',\n      'Only show the outline of the shape',\n    ],\n    [MATERIAL_KIND.points]: [\n      'Points Materials',\n      'Only show the points outline of the shape',\n    ],\n    [MATERIAL_KIND.lambert]: [\n      'Lambert Materials',\n      'Light sensitive material which simulates the Lambertian Reflection',\n    ],\n    [MATERIAL_KIND.phong]: [\n      'Phong Materials',\n      'A material for shinny surfaces with specular effects',\n    ],\n    [MATERIAL_KIND.standard]: [\n      'Standard Materials',\n      'A material uses a metalic-roughness model to simulate real material',\n    ],\n  }[kind];\n\n  return (\n    <VStack\n      maxWidth=\"600px\"\n      spacing={3}\n      color=\"blue.800\"\n      alignItems=\"flex-start\"\n      fontWeight=\"bold\"\n    >\n      <Text fontSize=\"2xl\">{title}</Text>\n      <Text>{description}</Text>\n      {lights.map(([title, description], idx) => (\n        <Fragment key={idx}>\n          <Text fontSize=\"2xl\">{title}</Text>\n          <Text>{description}</Text>\n        </Fragment>\n      ))}\n    </VStack>\n  );\n}\n\nfunction Config({ backgroundColor, followed, targetRef }) {\n  const scene = useThree((state) => state.scene);\n  const camera = useThree((state) => state.camera);\n  scene.background = new THREE.Color(backgroundColor);\n  const followCamera = useCallback(() => {\n    if (followed && targetRef.current) {\n      camera.lookAt(targetRef.current.position);\n      // controlRef.current.update();\n    }\n  }, [followed, targetRef, camera]);\n  useFrame(followCamera);\n  return null;\n}\n\nfunction Lights({\n  ambientLight,\n  hemisphereLight,\n  directionalLight,\n  directionalHelper,\n  directionalPosition,\n  pointLight,\n  pointHelper,\n  pointPosition,\n  spotLight,\n  spotPosition,\n  spotHelper,\n  spotDistance,\n  penumbra,\n  decay,\n  spotAngle,\n  lightColor,\n  lightIntensity,\n  skyColor,\n  groundColor,\n}) {\n  const directionalLightRef = useRef();\n  const pointLightRef = useRef();\n  const spotLightRef = useRef();\n  useHelper(\n    directionalHelper && directionalLightRef,\n    THREE.DirectionalLightHelper\n  );\n  useHelper(pointHelper && pointLightRef, THREE.PointLightHelper);\n  useHelper(spotHelper && spotLightRef, THREE.SpotLightHelper);\n\n  return (\n    <>\n      {ambientLight && (\n        <ambientLight color={lightColor} intensity={lightIntensity} />\n      )}\n      {hemisphereLight && (\n        <hemisphereLight\n          intensity={lightIntensity}\n          skyColor={skyColor}\n          groundColor={groundColor}\n        />\n      )}\n      {directionalLight && (\n        <directionalLight\n          position={[directionalPosition[0], 1.5, directionalPosition[1]]}\n          ref={directionalLightRef}\n          color={lightColor}\n          intensity={lightIntensity}\n        />\n      )}\n      {pointLight && (\n        <pointLight\n          ref={pointLightRef}\n          color={lightColor}\n          position={[pointPosition[0], 0.5, pointPosition[1]]}\n          intensity={lightIntensity}\n          distance={10}\n        />\n      )}\n      {spotLight && (\n        <spotLight\n          ref={spotLightRef}\n          color={lightColor}\n          position={[spotPosition[0], 2, spotPosition[1]]}\n          intensity={lightIntensity}\n          distance={spotDistance}\n          angle={spotAngle}\n          penumbra={penumbra}\n          decay={decay}\n        />\n      )}\n    </>\n  );\n}\n\nfunction Donut({\n  donutRef,\n  kind,\n  oscillation,\n  color,\n  emissiveColor,\n  emissiveIntensity,\n  opacity,\n  isDoubleSide,\n  isRotate,\n  shininess,\n  specular,\n  metalness,\n  roughness,\n}) {\n  let angle = 0;\n  useFrame(() => {\n    if (donutRef.current) {\n      if (oscillation) {\n        donutRef.current.position.y = Math.sin(angle);\n      }\n      if (isRotate) {\n        donutRef.current.rotation.x = angle;\n      }\n      angle += 0.01;\n    }\n  });\n  if ([MATERIAL_KIND.line].includes(kind)) {\n    return (\n      <line ref={donutRef} rotation-x={(-30 / 180) * Math.PI}>\n        <torusGeometry args={[0.5, 0.2, 30, 30]} />\n        <lineBasicMaterial color={color} linewidth={1} />\n      </line>\n    );\n  }\n  if ([MATERIAL_KIND.points].includes(kind)) {\n    return (\n      <points ref={donutRef} rotation-x={(-30 / 180) * Math.PI}>\n        <torusGeometry args={[0.5, 0.2, 30, 30]} />\n        <pointsMaterial color={color} size={0.01} />\n      </points>\n    );\n  }\n  return (\n    <mesh\n      ref={donutRef}\n      rotation-x={(-30 / 180) * Math.PI}\n      castShadow\n      receiveShadow\n    >\n      <torusGeometry args={[0.5, 0.2, 30, 30]} />\n      {{\n        [MATERIAL_KIND.basic]: (\n          <meshBasicMaterial\n            color={color}\n            opacity={opacity}\n            transparent={opacity}\n          />\n        ),\n        [MATERIAL_KIND.normal]: (\n          <meshNormalMaterial opacity={opacity} transparent={opacity !== 1} />\n        ),\n        [MATERIAL_KIND.depth]: (\n          <meshDepthMaterial\n            color={color}\n            opacity={opacity}\n            transparent={opacity}\n          />\n        ),\n        [MATERIAL_KIND.lambert]: (\n          <meshLambertMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n        [MATERIAL_KIND.phong]: (\n          <meshPhongMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            shininess={shininess} // default 30\n            specular={specular}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n        [MATERIAL_KIND.standard]: (\n          <meshStandardMaterial\n            color={color}\n            emissive={emissiveColor}\n            emissiveIntensity={emissiveIntensity}\n            side={isDoubleSide ? THREE.DoubleSide : THREE.FrontSide}\n            metalness={metalness}\n            roughness={roughness}\n            opacity={opacity}\n            transparent={opacity !== 1}\n          />\n        ),\n      }[kind] || null}\n    </mesh>\n  );\n}\n\nfunction Plane({ color }) {\n  return (\n    <mesh rotation-x={(-90 / 180) * Math.PI}>\n      <planeGeometry args={[2, 2]} />\n      <meshStandardMaterial color={color} metalness={0.6} roughness={0} />\n    </mesh>\n  );\n}\n","import { useRef, useEffect, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { Box, VStack, Text } from '@chakra-ui/react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { useHelper } from '@react-three/drei';\n\nexport default function Interaction() {\n  return (\n    <VStack w=\"100%\" h=\"100%\" alignItems=\"stretch\">\n      <Text fontSize=\"4xl\" fontWeight=\"bold\">\n        Use Arrow Key to Move the Object\n      </Text>\n      <Box flex={1}>\n        <Canvas\n          camera={{\n            position: [8, 8, -4],\n          }}\n          onCreated={(state) => {\n            state.scene.background = new THREE.Color(0xaaaaaa);\n          }}\n        >\n          <gridHelper />\n          <Ball />\n          <Light />\n        </Canvas>\n      </Box>\n    </VStack>\n  );\n}\n\nfunction Ball() {\n  const radius = 1;\n  const ballRef = useRef();\n  const posX = useRef(0);\n  const posZ = useRef(0);\n  const delta = useRef(0.1);\n  useFrame((state) => {\n    if (ballRef.current.position.x !== posX.current) {\n      ballRef.current.position.x = parseFloat(\n        (ballRef.current.position.x + delta.current).toFixed(2)\n      );\n      ballRef.current.rotation.x += delta.current;\n      state.camera.position.x = parseFloat(\n        (state.camera.position.x + delta.current).toFixed(2)\n      );\n    }\n    if (ballRef.current.position.z !== posZ.current) {\n      ballRef.current.position.z = parseFloat(\n        (ballRef.current.position.z + delta.current).toFixed(2)\n      );\n      ballRef.current.rotation.z += delta.current;\n      state.camera.position.z = parseFloat(\n        (state.camera.position.z + delta.current).toFixed(2)\n      );\n    }\n  });\n\n  const handleInteraction = useCallback((evt) => {\n    switch (evt.key) {\n      case 'ArrowUp':\n        posX.current -= 1;\n        delta.current = -0.1;\n        break;\n      case 'ArrowDown':\n        posX.current += 1;\n        delta.current = 0.1;\n        break;\n      case 'ArrowRight':\n        posZ.current -= 1;\n        delta.current = -0.1;\n        break;\n      case 'ArrowLeft':\n        posZ.current += 1;\n        delta.current = 0.1;\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleInteraction, false);\n    return () => document.removeEventListener('keydown', handleInteraction);\n  }, [handleInteraction]);\n\n  return (\n    <mesh ref={ballRef} position={[posX.current, 1, posZ.current]}>\n      <sphereGeometry args={[radius, 30, 30]} />\n      <meshStandardMaterial color=\"red\" />\n    </mesh>\n  );\n}\n\nfunction Light(props) {\n  const directionLightRef = useRef();\n  useHelper(directionLightRef, THREE.DirectionalLightHelper);\n  return (\n    <directionalLight\n      position={[10, 10, 10]}\n      ref={directionLightRef}\n      {...props}\n    />\n  );\n}\n","import { Heading, Center } from '@chakra-ui/react';\n\nexport default function NotFound() {\n  return (\n    <Center w=\"100%\" h=\"100%\">\n      <Heading color=\"gray.300\">Not Found Page</Heading>\n    </Center>\n  );\n}\n","import { Grid, VStack, Center, Icon, Link } from '@chakra-ui/react';\nimport { Switch, Route, Link as RouterLink } from 'react-router-dom';\nimport { FaGithub } from 'react-icons/fa';\n\nimport ReadMe from './pages/ReadMe';\nimport Demo from './pages/Demo';\nimport Interaction from './pages/Interaction';\nimport NotFound from './pages/NotFound';\n\nconst routes = [\n  {\n    path: '/',\n    title: 'Demo',\n    Component: Demo,\n  },\n  {\n    path: '/read-me',\n    title: 'Read Me',\n    Component: ReadMe,\n  },\n  {\n    path: '/interaction',\n    title: 'Interaction',\n    Component: Interaction,\n  },\n];\n\nfunction Sidebar() {\n  return (\n    <VStack\n      h=\"100%\"\n      w=\"100%\"\n      pt={4}\n      bgColor=\"blue.800\"\n      color=\"white\"\n      fontWeight=\"bold\"\n      alignItems=\"stretch\"\n      pos=\"relative\"\n    >\n      {routes.map((route) => (\n        <RouterLink to={route.path} key={route.title}>\n          <Center\n            color=\"blue.100\"\n            w=\"100%\"\n            p={3}\n            _hover={{ bgColor: 'blue.700' }}\n          >\n            {route.title}\n          </Center>\n        </RouterLink>\n      ))}\n      <Center\n        bgColor=\"blue.100\"\n        pos=\"absolute\"\n        lineHeight=\"60px\"\n        bottom={0}\n        left={0}\n        right={0}\n        color=\"blue.800\"\n      >\n        <Link href=\"https://github.com/xJkit\" target=\"_blank\">\n          <Icon as={FaGithub} mr={2} />\n          Jay Chung\n        </Link>\n      </Center>\n    </VStack>\n  );\n}\n\nfunction Main(props) {\n  return (\n    <VStack h=\"100%\" w=\"100%\" overflow=\"hidden\" {...props} py={8} px={5}>\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            exact\n            key={route.path}\n            path={route.path}\n            component={route.Component}\n          />\n        ))}\n        <Route component={NotFound} />\n      </Switch>\n    </VStack>\n  );\n}\n\nfunction App() {\n  return (\n    <Grid h=\"100vh\" w=\"100vw\" templateColumns=\"140px 1fr\">\n      <Sidebar />\n      <Main />\n    </Grid>\n  );\n}\n\nexport default App;\n","import { Heading, Box, Text, Link, VStack } from '@chakra-ui/react';\n\nexport default function ReadMe() {\n  return (\n    <Box color=\"blue.800\" w=\"100%\" fontSize=\"xl\">\n      <Heading mb={10}>\n        Learn Three.js in{' '}\n        <Link color=\"blue.500\" href=\"https://reactjs.org/\" target=\"_blank\">\n          React\n        </Link>{' '}\n        way\n      </Heading>\n      <VStack spacing={5} alignItems=\"flex-start\">\n        <Text>\n          <Link href=\"https://threejs.org/\" target=\"_blank\" color=\"blue.500\">\n            Three.js\n          </Link>{' '}\n          is an awesome library that makes the Web 3D development a lot easier.\n        </Text>\n        <Text>\n          However, when I begin three.js, from this{' '}\n          <Link\n            color=\"blue.500\"\n            href=\"https://github.com/mrdoob/three.js/blob/master/examples/webgl_animation_cloth.html\"\n            target=\"_blank\"\n          >\n            official documentation code example\n          </Link>\n          , creating meshes, objects, materials, lights, render loops, and so on\n          in imperative way is not really my thing. Why not just create\n          everything in{' '}\n          <b>declarative, more functional, and component-based objects!</b> That\n          is what React looks like.\n        </Text>\n        <Text>\n          Special thanks to the three.js react renderer{' '}\n          <Link\n            href=\"https://github.com/pmndrs/react-three-fiber\"\n            color=\"blue.500\"\n            target=\"_blank\"\n          >\n            react-three/fiber\n          </Link>{' '}\n          which makes web 3d happen in React world.\n        </Text>\n        <Text>\n          It is welcome to check my{' '}\n          <Link\n            color=\"blue.500\"\n            href=\"https://github.com/xJkit/learn-threejs-in-react-way\"\n            target=\"_blank\"\n          >\n            source code.\n          </Link>{' '}\n          Any suggestion and PR is welcome!\n        </Text>\n      </VStack>\n    </Box>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport pkg from '../package.json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={`/${pkg.name}`}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}